CREATE TABLE t_guest (
  guest_seq BIGSERIAL PRIMARY KEY,
  guest_username VARCHAR(20) NOT NULL,
  guest_password VARCHAR(255) NOT NULL,
  guest_id_no VARCHAR(20) NOT NULL,
  guest_name VARCHAR(100) NOT NULL,
  guest_email VARCHAR(30) NOT NULL,
  guest_phone VARCHAR(30),
  guest_dob DATE,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE t_room_type (
  room_type_seq BIGSERIAL PRIMARY KEY,
  room_type_name VARCHAR(30) NOT NULL,
  room_type_desc VARCHAR(200),
  room_type_max_occupancy INTEGER,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE t_room_type_price (
  room_type_price_seq BIGSERIAL PRIMARY KEY,
  room_type_seq INTEGER NOT NULL REFERENCES t_room_type(room_type_seq),
  room_type_price NUMERIC,
  price_period_start DATE,
  price_period_end DATE,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_room_type_price_room_type_seq ON t_room_type_price(room_type_seq);
CREATE INDEX idx_t_room_type_price_type_price_period ON t_room_type_price(room_type_seq, price_period_start, price_period_end);

CREATE TABLE t_room_amenity (
  room_amenity_seq BIGSERIAL PRIMARY KEY,
  room_amenity_name VARCHAR(50) NOT NULL,
  room_amenity_desc VARCHAR(200),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE t_room_type_amenity_map (
  room_type_amenity_map_seq BIGSERIAL PRIMARY KEY,
  room_type_seq INTEGER NOT NULL REFERENCES t_room_type(room_type_seq),
  room_amenity_seq INTEGER NOT NULL REFERENCES t_room_amenity(room_amenity_seq),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_room_type_amenity_map_room_type_seq ON t_room_type_amenity_map(room_type_seq);
CREATE INDEX idx_t_room_type_amenity_map_room_amenity_seq ON t_room_type_amenity_map(room_amenity_seq);

CREATE TABLE t_room_bed (
  room_bed_seq BIGSERIAL PRIMARY KEY,
  room_bed_name VARCHAR(50) NOT NULL,
  room_bed_desc VARCHAR(200),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE t_room_type_bed_map (
  room_type_bed_map_seq BIGSERIAL PRIMARY KEY,
  room_type_seq INTEGER NOT NULL REFERENCES t_room_type(room_type_seq),
  room_bed_seq INTEGER NOT NULL REFERENCES t_room_bed(room_bed_seq),
  room_type_bed_qty INTEGER NOT NULL,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_room_type_bed_map_room_type_seq ON t_room_type_bed_map(room_type_seq);
CREATE INDEX idx_t_room_type_bed_map_room_bed_seq ON t_room_type_bed_map(room_bed_seq);

CREATE TABLE t_room_view (
  room_view_seq BIGSERIAL PRIMARY KEY,
  room_view_name VARCHAR(50) NOT NULL,
  room_view_desc VARCHAR(200),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE t_room_view_price (
  room_view_price_seq BIGSERIAL PRIMARY KEY,
  room_view_seq INTEGER NOT NULL REFERENCES t_room_view(room_view_seq),
  room_view_price NUMERIC,
  price_period_start DATE,
  price_period_end DATE,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_room_view_price_room_view_seq ON t_room_view_price(room_view_seq);
CREATE INDEX idx_t_room_view_price_view_price_period ON t_room_view_price(room_view_seq, price_period_start, price_period_end);

CREATE TABLE t_room (
  room_seq BIGSERIAL PRIMARY KEY,
  room_type_seq BIGINT NOT NULL REFERENCES t_room_type(room_type_seq),
  room_number VARCHAR(10) NOT NULL,
  room_floor VARCHAR(5) NOT NULL,
  room_size_sqft NUMERIC,
  room_view_seq BIGINT REFERENCES t_room_view(room_view_seq),
  room_smoking_yn BOOLEAN DEFAULT False,
  room_remarks VARCHAR(1000),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_room_room_type_seq ON t_room(room_type_seq);
CREATE INDEX idx_t_room_room_view_seq ON t_room(room_view_seq);

CREATE TABLE t_room_price_adjustment (
  room_price_adj_seq BIGSERIAL PRIMARY KEY,
  room_seq BIGINT NOT NULL REFERENCES t_room(room_seq),
  room_price_adjustment NUMERIC,
  price_adjustment_period_start DATE,
  price_adjustment_period_end DATE,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_room_price_adjustment_room_seq ON t_room_price_adjustment(room_seq);
CREATE INDEX idx_t_room_price_adjustment_room_price_period ON t_room_price_adjustment(room_seq, price_adjustment_period_start, price_adjustment_period_end);

CREATE TABLE t_season_price_adjustment (
  season_price_adj_seq BIGSERIAL PRIMARY KEY,
  max_occupancy_percent NUMERIC NOT NULL,
  season_price_adjustment NUMERIC,
  price_adjustment_period_start DATE,
  price_adjustment_period_end DATE,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
);
CREATE INDEX idx_t_season_price_adjustment_season_price_period ON t_season_price_adjustment(max_occupancy_percent, price_adjustment_period_start, price_adjustment_period_end);

CREATE TABLE t_booking (
  booking_seq BIGSERIAL PRIMARY KEY,
  booking_id VARCHAR(16) NOT NULL DEFAULT TO_CHAR(NOW(), 'YYYYMMDD24HHMISS'),
  guest_seq BIGINT NOT NULL REFERENCES t_guest(guest_seq),
  num_guests_adults INTEGER NOT NULL,
  num_guests_children INTEGER NOT NULL,
  booking_period_start DATE,
  booking_period_end DATE,
  booking_status VARCHAR(20),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
)
CREATE INDEX idx_t_booking_guest_seq ON t_booking(guest_seq);

CREATE TABLE t_booking_room_map (
  booking_room_map_seq BIGSERIAL PRIMARY KEY,
  booking_seq BIGINT NOT NULL REFERENCES t_booking(booking_seq),
  room_seq BIGINT NOT NULL REFERENCES t_room(room_seq),
  room_booking_period_start DATE,
  room_booking_period_end DATE,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
)
CREATE INDEX idx_t_booking_room_map_booking_seq ON t_booking_room_map(booking_seq);
CREATE INDEX idx_t_booking_room_map_room_seq ON t_booking_room_map(room_seq);
CREATE INDEX idx_t_booking_room_map_room_booking_period ON t_booking_room_map(room_seq, room_booking_period_start, room_booking_period_end);

CREATE TABLE t_booking_charge (
  booking_charge_seq BIGSERIAL PRIMARY KEY,
  booking_seq BIGINT NOT NULL REFERENCES t_booking(booking_seq),
  charge_desc VARCHAR(200) NOT NULL,
  charge_amount NUMERIC NOT NULL,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
)
CREATE INDEX idx_t_booking_charge_booking_seq ON t_booking_charge(booking_seq);

CREATE TABLE t_charge (
  charge_seq BIGSERIAL PRIMARY KEY,
  charge_desc VARCHAR(200) NOT NULL,
  charge_amount NUMERIC NOT NULL,
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
)

CREATE TABLE t_tag (
  tag_seq BIGSERIAL PRIMARY KEY,
  tag_name VARCHAR(20) NOT NULL,
  tag_desc VARCHAR(200),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
)

CREATE TABLE t_tag_map (
  tag_map_seq BIGSERIAL PRIMARY KEY,
  tag_seq BIGINT NOT NULL REFERENCES t_tag(tag_seq),
  room_type_seq BIGINT REFERENCES t_room_type(room_type_seq),
  charge_seq BIGINT REFERENCES t_charge(charge_seq),
  
  active_flag BOOLEAN NOT NULL DEFAULT True,
  created_by BIGINT NOT NULL,
  created_date TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_by BIGINT NOT NULL,
  updated_date TIMESTAMP NOT NULL DEFAULT NOW()
)
CREATE INDEX idx_t_tag_map_tag_seq ON t_tag_map(tag_seq);
CREATE INDEX idx_t_tag_map_room_type_seq ON t_tag_map(room_type_seq);
CREATE INDEX idx_t_tag_map_charge_seq ON t_tag_map(charge_seq);

CREATE OR REPLACE FUNCTION Calc_Day_Occupancy(p_day DATE)
RETURNS NUMERIC AS $$
DECLARE
    v_occupancy_percent NUMERIC;
BEGIN
    SELECT COALESCE(ROUND(COUNT(DISTINCT m.room_seq) * 100.0 / (SELECT COUNT(*) FROM t_room WHERE active_flag = TRUE), 2), 0) INTO v_occupancy_percent
    FROM t_booking_room_map m
    INNER JOIN t_booking b ON b.booking_seq = m.booking_seq
    WHERE b.booking_status = 'CONFIRMED' AND m.room_booking_period_start <= p_day AND m.room_booking_period_end >= p_day;

    RETURN v_occupancy_percent;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION Calc_Room_Total_Charge(
    p_room_type_seq INTEGER,
    p_room_view_seq INTEGER,
    p_room_seq INTEGER,
    p_day DATE
)
RETURNS NUMERIC AS $$
DECLARE
    v_occupancy_percent NUMERIC := 0;
    v_type_charge NUMERIC := 0;
    v_view_charge NUMERIC := 0;
    v_adj_charge NUMERIC := 0;
    v_season_charge NUMERIC := 0;
BEGIN
    v_occupancy_percent := Calc_Day_Occupancy(p_day);

    SELECT room_type_price INTO v_type_charge
    FROM t_room_type_price
    WHERE room_type_seq = p_room_type_seq AND price_period_start <= p_day AND price_period_end >= p_day
    ORDER BY price_period_start DESC LIMIT 1;

    SELECT room_view_price INTO v_view_charge
    FROM t_room_view_price
    WHERE room_view_seq = p_room_view_seq AND price_period_start <= p_day AND price_period_end >= p_day
    ORDER BY price_period_start DESC LIMIT 1;

    SELECT room_price_adjustment INTO v_adj_charge
    FROM t_room_price_adjustment
    WHERE room_seq = p_room_seq AND price_adjustment_period_start <= p_day AND price_adjustment_period_end >= p_day
    ORDER BY price_adjustment_period_start DESC LIMIT 1;

    SELECT season_price_adjustment INTO v_season_charge
    FROM t_season_price_adjustment
    WHERE max_occupancy_percent >= v_occupancy_percent AND price_adjustment_period_start <= p_day AND price_adjustment_period_end >= p_day
    ORDER BY price_adjustment_period_start DESC, max_occupancy_percent DESC LIMIT 1;

    RETURN COALESCE(v_type_charge, 0) + COALESCE(v_view_charge, 0) + COALESCE(v_adj_charge, 0) + COALESCE(v_season_charge, 0);
END;
$$ LANGUAGE plpgsql;